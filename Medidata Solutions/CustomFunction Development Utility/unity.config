<?xml version="1.0" encoding="utf-8" ?>
<unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
  <container>
    <!-- Localization -->
    <register type="Medidata.Interfaces.Localization.ILocalization, Medidata.Interfaces"
        mapTo="Medidata.Core.Adapters.LocalizationAdapter, Medidata.Core.Adapters" />

    <register type="Medidata.Core.Objects.Interfaces.ILocalizedDataStringCacheManager, Medidata.Core.Objects"
      mapTo="Medidata.Core.Objects.LocalizedDataStringCacheManager, Medidata.Core.Objects">
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Interfaces.ILocalizedStringCacheManager, Medidata.Core.Objects"
      mapTo="Medidata.Core.Objects.LocalizedStringCacheManager, Medidata.Core.Objects">
      <lifetime type="singleton" />
    </register>

    <!-- Balance -->
    <register type="Medidata.Interfaces.Balance.IBalanceReplaceKitService, Medidata.Interfaces"
        mapTo="Medidata.Core.Objects.Balance.WebService.BalanceReplaceKitService, Medidata.Core.Objects" />

    <register type="Medidata.Interfaces.Balance.IBalanceAppFetcher, Medidata.Interfaces"
        mapTo="Medidata.Core.Objects.Balance.BalanceAppFetcher, Medidata.Core.Objects" />

    <register type="Medidata.Interfaces.Balance.IBalanceDataJsonParser, Medidata.Interfaces"
        mapTo="Medidata.Core.Objects.Balance.BalanceDataJsonParser, Medidata.Core.Objects" />

    <register type="Medidata.Interfaces.Balance.IOidPathsManager, Medidata.Interfaces"
        mapTo="Medidata.Core.Objects.Balance.OidPathsManager, Medidata.Core.Objects" />

    <register type="Medidata.Interfaces.Balance.IInventoryService, Medidata.Interfaces"
        mapTo="Medidata.Core.Objects.Balance.InventoryService, Medidata.Core.Objects" />

    <register type="Medidata.Interfaces.Balance.ITitrationService, Medidata.Interfaces"
        mapTo="Medidata.Core.Objects.Balance.TitrationService, Medidata.Core.Objects" />

    <register type="Medidata.Interfaces.Balance.IResponseParser, Medidata.Interfaces"
        mapTo="Medidata.Core.Objects.Balance.ResponseParser, Medidata.Core.Objects" />

    <register type="Medidata.Interfaces.Balance.IBalanceSubjectService, Medidata.Interfaces"
        mapTo="Medidata.Core.Objects.Balance.BalanceSubjectService, Medidata.Core.Objects" />

    <register type="Medidata.Interfaces.Balance.IBalanceRaveDataEntryService, Medidata.Interfaces"
       mapTo="Medidata.Core.Objects.Balance.BalanceRaveDataEntryService, Medidata.Core.Objects" />

    <register type="Medidata.Interfaces.Balance.IBalanceGenericEntryService, Medidata.Interfaces"
        mapTo="Medidata.Core.Objects.Balance.BalanceGenericEntryService, Medidata.Core.Objects" />

    <register type="Medidata.Interfaces.Balance.IDoser, Medidata.Interfaces"
        mapTo="Medidata.Core.Objects.Balance.Doser, Medidata.Core.Objects" />

    <register type="Medidata.Interfaces.Balance.IConfigurationHelper, Medidata.Interfaces"
        mapTo="Medidata.Core.Objects.Balance.ConfigurationHelper, Medidata.Core.Objects" />

    <register type="Medidata.Interfaces.Adapters.ICheckService, Medidata.Interfaces"
       mapTo="Medidata.Core.Objects.Adapters.CheckAdapter, Medidata.Core.Objects" />

    <register type="Medidata.Interfaces.Balance.IBalanceLoggingHelper, Medidata.Interfaces"
       mapTo="Medidata.Core.Objects.Balance.BalanceLoggingHelper, Medidata.Core.Objects" />

    <register type="Medidata.Interfaces.Balance.IBalanceIntegrationService, Medidata.Interfaces"
       mapTo="Medidata.Core.Objects.Balance.BalanceIntegrationService, Medidata.Core.Objects" />

    <register type="Medidata.Interfaces.Adapters.IDataFormatService, Medidata.Interfaces"
       mapTo="Medidata.Core.Objects.Adapters.DataFormatAdapter, Medidata.Core.Objects" />

    <register type="Medidata.Interfaces.Balance.IPostWebServiceRequester, Medidata.Interfaces"
        mapTo="Medidata.Core.Objects.Balance.WebService.PostWebServiceRequester, Medidata.Core.Objects" />

    <register type="Medidata.Interfaces.Balance.IWebServiceRequester, Medidata.Interfaces"
        mapTo="Medidata.Core.Objects.Balance.WebService.WebServiceRequester, Medidata.Core.Objects" />

    <register type="Medidata.Interfaces.Balance.IBalanceKitStorageService, Medidata.Interfaces"
         mapTo="Medidata.Core.Objects.Balance.BalanceKitStorageService, Medidata.Core.Objects" />

    <register type="Medidata.Data.IAgent, Medidata.Data"
                 mapTo="Medidata.Data.Adapters.AgentAdapter, Medidata.Data">
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.Balance.eDA.Services.IDispensationAccountabilityService, Medidata.Interfaces"
        mapTo="Medidata.Core.Objects.Balance.eDA.DispensationAccountabilityService, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.Balance.eDA.Services.IDispensationAccountabilityTransformEngine, Medidata.Interfaces"
        mapTo="Medidata.Core.Objects.Balance.eDA.DispensationAccountabilityTransformEngine, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.Balance.eDA.Services.IBalanceRepository, Medidata.Interfaces"
        mapTo="Medidata.Core.Objects.Balance.eDA.BalanceRepository, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.Balance.eDA.Services.IRaveRepository, Medidata.Interfaces"
        mapTo="Medidata.Core.Objects.Balance.eDA.RaveRepository, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>


    <!-- BulkStatusUpdate -->
    <register type="Medidata.Interfaces.AsyncProcessing.IBulkStatusUpdateAction, Medidata.Interfaces"
                 mapTo="Medidata.Core.AsyncProcessing.BulkStatusUpdateAction, Medidata.Core.AsyncProcessing">
      <lifetime type="singleton" />
    </register>
    <register type="Medidata.Interfaces.AsyncProcessing.IBulkStatusUpdateQueueManager, Medidata.Interfaces"
                 mapTo="Medidata.Core.AsyncProcessing.BulkStatusUpdateQueueManager, Medidata.Core.AsyncProcessing">
      <lifetime type="singleton" />
    </register>
    <register type="Medidata.Interfaces.AsyncProcessing.IBulkStatusUpdateQueueTaskItem, Medidata.Interfaces"
                 mapTo="Medidata.Core.AsyncProcessing.BulkStatusUpdateQueueTaskItem, Medidata.Core.AsyncProcessing">
      <lifetime type="singleton" />
    </register>
    <register type="Medidata.Interfaces.AsyncProcessing.ISimpleQueue, Medidata.Interfaces"
                 mapTo="Medidata.Core.AsyncProcessing.BulkStatusUpdateQueue, Medidata.Core.AsyncProcessing">
      <lifetime type="singleton" />
    </register>

    <!-- TSDV -->

    <register type="Medidata.Interfaces.TSDV.IRunRetrospective, Medidata.Interfaces"
               mapTo="Medidata.Core.Objects.TSDV.RunRetrospective,  Medidata.Core.Objects">
      <lifetime type="singleton" />
    </register>

    <!-- Logging -->
    <register type="Medidata.Interfaces.Logging.ILogManager, Medidata.Interfaces"
        mapTo="Medidata.Logging.LogManager, Medidata.Logging" >
      <constructor />
    </register>
    <register type="Medidata.Logging.ILogFactory, Medidata.Logging"
        mapTo="Medidata.Logging.LogFactory, Medidata.Logging">
    </register>

    <!-- Coder -->
    <register type="Medidata.Core.Common.Interfaces.IRetry, Medidata.Core.Common"
          mapTo="Medidata.Core.Common.Utilities.Retry, Medidata.Core.Common">
    </register>

    <register type="Medidata.Core.Common.Interfaces.ISqlRetryHelper, Medidata.Core.Common"
          mapTo="Medidata.Core.Common.Utilities.SqlRetryHelper, Medidata.Core.Common">
      <lifetime type="singleton" />
    </register>

    <!--Proxy resolutions-->
    <register type="Medidata.Core.Objects.ProxyInterfaces.IRoleService, Medidata.Core.Objects"
                mapTo="Medidata.Core.Objects.ProxyImplementation.RoleService, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.ProxyInterfaces.RoleAction.IRoleActionService, Medidata.Core.Objects"
            mapTo="Medidata.Core.Objects.ProxyImplementation.RoleAction.RoleActionService, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.ProxyInterfaces.RoleAction.IRoleActionCacheService, Medidata.Core.Objects"
                mapTo="Medidata.Core.Objects.ProxyImplementation.RoleAction.RoleActionCacheService, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.ProxyInterfaces.RoleAction.IRoleActionCreationService, Medidata.Core.Objects"
                mapTo="Medidata.Core.Objects.ProxyImplementation.RoleAction.RoleActionCreationService, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.ProxyInterfaces.RoleAction.IRoleActionAuditService, Medidata.Core.Objects"
                mapTo="Medidata.Core.Objects.ProxyImplementation.RoleAction.RoleActionAuditService, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.ProxyInterfaces.ICacheKeyCreationService, Medidata.Core.Objects"
                mapTo="Medidata.Core.Objects.ProxyImplementation.CacheKeyCreationService, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Caching.ICacheEngine, Medidata.Interfaces"
                mapTo="Medidata.Caching.ExpiringHashCacheEngine, Medidata.Caching" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Partitioning.IPartitionKeyService, Medidata.Interfaces"
              mapTo="Medidata.Core.Objects.ProxyImplementation.NonPartitionKeyService, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.ProxyInterfaces.IVirtualRoleService, Medidata.Core.Objects"
                mapTo="Medidata.Core.Objects.ProxyImplementation.VirtualRoleService, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.ProxyInterfaces.ISystemRoleService, Medidata.Core.Objects"
                mapTo="Medidata.Core.Objects.ProxyImplementation.SystemRoleService, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.ProxyInterfaces.IRoleInitializationService, Medidata.Core.Objects"
                mapTo="Medidata.Core.Objects.ProxyImplementation.RoleInitializationService, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <!-- Adapters -->
    <register type="Medidata.Data.IAgent, Medidata.Data"
              mapTo="Medidata.Data.Adapters.AgentAdapter, Medidata.Data">
      <lifetime type="singleton" />
	  </register>

    <register type="Medidata.Interfaces.Adapters.IRecordService, Medidata.Interfaces"
                mapTo="Medidata.Core.Objects.Adapters.RecordAdapter, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Adapters.IFormService, Medidata.Interfaces"
                mapTo="Medidata.Core.Objects.Adapters.FormAdapter, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Adapters.IProjectService, Medidata.Interfaces"
                mapTo="Medidata.Core.Objects.Adapters.ProjectAdapter, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Factories.ISavedMigrationPlanListFactory, Medidata.Interfaces"
                mapTo="Medidata.Core.Objects.Factories.SavedMigrationPlanListFactory, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Adapters.IMigrationPlanService, Medidata.Interfaces"
                mapTo="Medidata.Core.Objects.Adapters.MigrationPlanAdapter, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Adapters.IDataDictionaryEntryService, Medidata.Interfaces"
                mapTo="Medidata.Core.Objects.Adapters.DataDictionaryEntryAdapter, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Adapters.IDataDictionaryService, Medidata.Interfaces"
                mapTo="Medidata.Core.Objects.Adapters.DataDictionaryAdapter, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Adapters.IFieldService, Medidata.Interfaces"
                mapTo="Medidata.Core.Objects.Adapters.FieldAdapter, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Adapters.IFolderService, Medidata.Interfaces"
                mapTo="Medidata.Core.Objects.Adapters.FolderAdapter, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Adapters.IUnitDictionaryService, Medidata.Interfaces"
                mapTo="Medidata.Core.Objects.Adapters.UnitDictionaryAdapter, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Adapters.IUnitDictionaryEntryService, Medidata.Interfaces"
                mapTo="Medidata.Core.Objects.Adapters.UnitDictionaryEntryAdapter, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Adapters.IMigrationUtilService, Medidata.Interfaces"
                mapTo="Medidata.Core.Objects.Adapters.MigrationUtilAdapter, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Adapters.ICrfVersionAdapter, Medidata.Interfaces"
                mapTo="Medidata.Core.Objects.Adapters.CrfVersionAdapter, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Adapters.IMatrixService, Medidata.Interfaces"
                mapTo="Medidata.Core.Objects.Adapters.MatrixAdapter, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Adapters.IMigrationConfigurationService, Medidata.Interfaces"
                mapTo="Medidata.Core.Objects.Adapters.MigrationConfigurationAdapter, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.CRFMigrator.IMigrationChangeLogsService, Medidata.Interfaces"
                mapTo="Medidata.Core.Objects.ProxyImplementation.MigrationChangeLogsService, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.CRFMigrator.IMigrationReferenceMap, Medidata.Interfaces"
                mapTo="Medidata.Core.Objects.CRFMigrator.MigrationReferenceMap, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Adapters.IDataPointService, Medidata.Interfaces"
                mapTo="Medidata.Core.Objects.Adapters.DataPointAdapter, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Factories.IDataPointsFactory, Medidata.Interfaces"
              mapTo="Medidata.Core.Objects.Factories.DataPointsFactory, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>

    <register type="Medidata.Interfaces.Adapters.IStudyService, Medidata.Interfaces"
                mapTo="Medidata.Core.Objects.Services.StudyService, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Adapters.IStudySiteService, Medidata.Interfaces"
                mapTo="Medidata.Core.Objects.Services.StudySiteService, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Adapters.IDataPageService, Medidata.Interfaces"
                mapTo="Medidata.Core.Objects.Services.DataPageService, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Adapters.ISubjectService, Medidata.Interfaces"
                mapTo="Medidata.Core.Objects.Services.SubjectService, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Adapters.ITimeService, Medidata.Interfaces"
          mapTo="Medidata.Core.Objects.Adapters.TimeAdapter, Medidata.Core.Objects">
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.Adapters.IObjectTypeService, Medidata.Interfaces"
              mapTo="Medidata.Core.Objects.Adapters.ObjectTypesAdapter, Medidata.Core.Objects">
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.FileVersion.IFileVersionService, Medidata.Interfaces"
              mapTo="Medidata.Core.Objects.Adapters.FileVersionAdapter, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>
    <register type="Medidata.Interfaces.Adapters.IDataObjectService, Medidata.Interfaces"
        mapTo="Medidata.Core.Objects.Adapters.DataObjectAdapter, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.Adapters.ICodingDictionaryService, Medidata.Interfaces"
  mapTo="Medidata.Core.Objects.Adapters.CodingDictionaryAdapter, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Adapters.IDerivationService, Medidata.Interfaces"
        mapTo="Medidata.Core.Objects.Adapters.DerivationAdapter, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Adapters.IVariableService, Medidata.Interfaces"
          mapTo="Medidata.Core.Objects.Adapters.VariableAdapter, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Adapters.IAnalyteService, Medidata.Interfaces"
			mapTo="Medidata.Core.Objects.Adapters.AnalyteAdapter, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Adapters.ILibraryIconService, Medidata.Interfaces"
			mapTo="Medidata.Core.Objects.Adapters.LibraryIconAdapter, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Adapters.ILabService, Medidata.Interfaces"
			mapTo="Medidata.Core.Objects.Adapters.LabAdapter, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Adapters.IRangeTypeService, Medidata.Interfaces"
			mapTo="Medidata.Core.Objects.Adapters.RangeTypeAdapter, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Adapters.ITwoPartSignatureService, Medidata.Interfaces"
mapTo="Medidata.Core.Objects.Adapters.TwoPartSignatureAdapter, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>
	
    <register type="Medidata.Interfaces.Adapters.ICoderFieldConfigurationWorkFlowDataService, Medidata.Interfaces"
        mapTo="Medidata.Core.Objects.Adapters.CoderFieldConfigurationWorkFlowDataAdapter, Medidata.Core.Objects" />

    <register type="Medidata.Interfaces.Adapters.ICoderWorkFlowDataService, Medidata.Interfaces"
        mapTo="Medidata.Core.Objects.Adapters.CoderWorkFlowDataAdapter, Medidata.Core.Objects" />
    
    <!-- audit generators-->
    <register type="Medidata.Core.Objects.Interfaces.Services.IArchitectAuditTracker, Medidata.Core.Objects"
          mapTo="Medidata.Core.Objects.Services.ArchitectAuditTracker, Medidata.Core.Objects" >
      <lifetime type="transient"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.Services.IUserIdentificationService, Medidata.Core.Objects"
            mapTo="Medidata.Core.Objects.Services.UserIdentificationService, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Adapters.IAuditCategoryCollectionService, Medidata.Interfaces"
            mapTo="Medidata.Core.Objects.Services.AuditCategoryCollectionService, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.Services.IArchitectAuditService, Medidata.Core.Objects"
              mapTo="Medidata.Core.Objects.Services.ArchitectAuditService, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Architect.ICustomFunctionAuditGenerator, Medidata.Core.Objects"
          mapTo="Medidata.Core.Objects.AuditGenerators.Architect.CustomFunctionAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Architect.ICoderConfigurationAuditGenerator, Medidata.Core.Objects"
              mapTo="Medidata.Core.Objects.AuditGenerators.Architect.CoderConfigurationAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Architect.ICoderFieldConfigurationWorkFlowDataAuditGenerator, Medidata.Core.Objects"
              mapTo="Medidata.Core.Objects.AuditGenerators.Architect.CoderFieldConfigurationWorkFlowDataAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Architect.ICoderLinkedFieldConfigurationAuditGenerator, Medidata.Core.Objects"
              mapTo="Medidata.Core.Objects.AuditGenerators.Architect.CoderLinkedFieldConfigurationAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Architect.IOIDPathAuditGenerator, Medidata.Core.Objects"
              mapTo="Medidata.Core.Objects.AuditGenerators.Architect.OIDPathAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Architect.IFormAuditGenerator, Medidata.Core.Objects"
          mapTo="Medidata.Core.Objects.AuditGenerators.Architect.FormAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Architect.ICheckActionAuditGenerator, Medidata.Core.Objects"
          mapTo="Medidata.Core.Objects.AuditGenerators.Architect.CheckActionAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Architect.ICheckStepAuditGenerator, Medidata.Core.Objects"
           mapTo="Medidata.Core.Objects.AuditGenerators.Architect.CheckStepAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Architect.ICheckAuditGenerator, Medidata.Core.Objects"
           mapTo="Medidata.Core.Objects.AuditGenerators.Architect.CheckAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Architect.IDerivationAuditGenerator, Medidata.Core.Objects"
           mapTo="Medidata.Core.Objects.AuditGenerators.Architect.DerivationAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Architect.IDerivationStepAuditGenerator, Medidata.Core.Objects"
       mapTo="Medidata.Core.Objects.AuditGenerators.Architect.DerivationStepAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Architect.IFieldAuditGenerator, Medidata.Core.Objects"
  mapTo="Medidata.Core.Objects.AuditGenerators.Architect.FieldAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Architect.IVariableAuditGenerator, Medidata.Core.Objects"
  mapTo="Medidata.Core.Objects.AuditGenerators.Architect.VariableAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Architect.IFolderAuditGenerator, Medidata.Core.Objects"
  mapTo="Medidata.Core.Objects.AuditGenerators.Architect.FolderAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Architect.IDataDictionaryAuditGenerator, Medidata.Core.Objects"
  mapTo="Medidata.Core.Objects.AuditGenerators.Architect.DataDictionaryAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Architect.IDataDictionaryEntryAuditGenerator, Medidata.Core.Objects"
  mapTo="Medidata.Core.Objects.AuditGenerators.Architect.DataDictionaryEntryAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Architect.IUnitDictionaryAuditGenerator, Medidata.Core.Objects"
  mapTo="Medidata.Core.Objects.AuditGenerators.Architect.UnitDictionaryAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Architect.IUnitDictionaryEntryAuditGenerator, Medidata.Core.Objects"
  mapTo="Medidata.Core.Objects.AuditGenerators.Architect.UnitDictionaryEntryAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Architect.IMatrixAuditGenerator, Medidata.Core.Objects"
  mapTo="Medidata.Core.Objects.AuditGenerators.Architect.MatrixAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Architect.IFolderFormAuditGenerator, Medidata.Core.Objects"
  mapTo="Medidata.Core.Objects.AuditGenerators.Architect.FolderFormAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Architect.ICRFDraftAuditGenerator, Medidata.Core.Objects"
  mapTo="Medidata.Core.Objects.AuditGenerators.Architect.CRFDraftAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Architect.ICRFVersionAuditGenerator, Medidata.Core.Objects"
  mapTo="Medidata.Core.Objects.AuditGenerators.Architect.CRFVersionAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Architect.IDraftRangeTypeAuditGenerator, Medidata.Core.Objects"
  mapTo="Medidata.Core.Objects.AuditGenerators.Architect.DraftRangeTypeAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Architect.IEmailEventDetailAuditGenerator, Medidata.Core.Objects"
  mapTo="Medidata.Core.Objects.AuditGenerators.Architect.EmailEventDetailAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Architect.IDraftVariableMappingAuditGenerator, Medidata.Core.Objects"
  mapTo="Medidata.Core.Objects.AuditGenerators.Architect.DraftVariableMappingAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Architect.ICRFVersionCopyAuditGenerator, Medidata.Core.Objects"
       mapTo="Medidata.Core.Objects.AuditGenerators.Architect.CRFVersionCopyAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Architect.IInPlaceEntryAuditGenerator, Medidata.Core.Objects"
  mapTo="Medidata.Core.Objects.AuditGenerators.Architect.InPlaceEntryAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>
    
    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Configuration.IReviewGroupAuditGenerator, Medidata.Core.Objects"
       mapTo="Medidata.Core.Objects.AuditGenerators.Configuration.ReviewGroupAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Configuration.IResourceConfigAuditGenerator, Medidata.Core.Objects"
       mapTo="Medidata.Core.Objects.AuditGenerators.Configuration.ResourceConfigAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Architect.IMigrateInPlaceAuditGenerator, Medidata.Core.Objects"
  mapTo="Medidata.Core.Objects.AuditGenerators.Architect.MigrateInPlaceAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Configuration.IMarkingGroupAuditGenerator, Medidata.Core.Objects"
       mapTo="Medidata.Core.Objects.AuditGenerators.Configuration.MarkingGroupAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Configuration.IMissingCodeAuditGenerator, Medidata.Core.Objects"
       mapTo="Medidata.Core.Objects.AuditGenerators.Configuration.MissingCodeAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>
    
    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Configuration.IReasonCodeAuditGenerator, Medidata.Core.Objects"
       mapTo="Medidata.Core.Objects.AuditGenerators.Configuration.ReasonCodeAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Configuration.IInactivationCodeAuditGenerator, Medidata.Core.Objects"
              mapTo="Medidata.Core.Objects.AuditGenerators.Configuration.InactivationCodeAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Configuration.IRoleAuditGenerator, Medidata.Core.Objects"
       mapTo="Medidata.Core.Objects.AuditGenerators.Configuration.RoleAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>
    
    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Configuration.IConfigurationAuditGenerator, Medidata.Core.Objects"
   mapTo="Medidata.Core.Objects.AuditGenerators.Configuration.ConfigurationAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Configuration.ICodingColumnAuditGenerator, Medidata.Core.Objects"
   mapTo="Medidata.Core.Objects.AuditGenerators.Configuration.CodingColumnAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Configuration.ILibraryIconAuditGenerator, Medidata.Core.Objects"
   mapTo="Medidata.Core.Objects.AuditGenerators.Configuration.LibraryIconAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Configuration.IMigrationConfigurationAuditGenerator, Medidata.Core.Objects"
 mapTo="Medidata.Core.Objects.AuditGenerators.Configuration.MigrationConfigurationAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Configuration.ILocalizationAuditGenerator, Medidata.Core.Objects"
 mapTo="Medidata.Core.Objects.AuditGenerators.Configuration.LocalizationAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>
    
    <register type="Medidata.Interfaces.Adapters.IMarkingGroupService, Medidata.Interfaces"
       mapTo="Medidata.Core.Objects.Adapters.MarkingGroupAdapter, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>
    
    <register type="Medidata.Core.Objects.Factories.IArchitectAuditServiceFactory, Medidata.Core.Objects"
                mapTo="Medidata.Core.Objects.Factories.ArchitectAuditServiceFactory, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Configuration.IClinicalViewControlAuditGenerator, Medidata.Core.Objects"
  mapTo="Medidata.Core.Objects.AuditGenerators.Configuration.ClinicalViewControlAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Configuration.IClinicalViewProjectAuditGenerator, Medidata.Core.Objects"
  mapTo="Medidata.Core.Objects.AuditGenerators.Configuration.ClinicalViewProjectAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Configuration.IDeviationClassAuditGenerator, Medidata.Core.Objects"
           mapTo="Medidata.Core.Objects.AuditGenerators.Configuration.DeviationClassAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Configuration.IDeviationCodeAuditGenerator, Medidata.Core.Objects"
           mapTo="Medidata.Core.Objects.AuditGenerators.Configuration.DeviationCodeAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Configuration.IUserGroupAuditGenerator, Medidata.Core.Objects"
           mapTo="Medidata.Core.Objects.AuditGenerators.Configuration.UserGroupAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Adapters.IInstalledModuleAdapter, Medidata.Interfaces"
               mapTo="Medidata.Core.Objects.Adapters.InstalledModuleAdapter, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Adapters.IAuditCategoryAdapter, Medidata.Interfaces"
             mapTo="Medidata.Core.Objects.Adapters.AuditCategoryAdapter, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Adapters.IImageLoaderAdapter, Medidata.Interfaces"
         mapTo="Medidata.Core.Objects.Adapters.ImageLoaderAdapter, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>
    
    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Configuration.IUserModuleAuditGenerator, Medidata.Core.Objects"
        mapTo="Medidata.Core.Objects.AuditGenerators.Configuration.UserModuleAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Configuration.IChangeCodeAuditGenerator, Medidata.Core.Objects"
   mapTo="Medidata.Core.Objects.AuditGenerators.Configuration.ChangeCodeAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Configuration.ISubjectStatusAuditGenerator, Medidata.Core.Objects"
           mapTo="Medidata.Core.Objects.AuditGenerators.Configuration.SubjectStatusAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Configuration.IRoleActionAuditGenerator, Medidata.Core.Objects"
        mapTo="Medidata.Core.Objects.AuditGenerators.Configuration.RoleActionAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Adapters.ICourseAdapter, Medidata.Interfaces"
                mapTo="Medidata.Core.Objects.Adapters.CourseAdapter, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Adapters.IRoleAdapter, Medidata.Interfaces"
            mapTo="Medidata.Core.Objects.Adapters.RoleAdapter, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Adapters.IQuestionnaireService, Medidata.Interfaces"
                mapTo="Medidata.Core.Objects.Adapters.QuestionnaireAdapter, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Configuration.ICourseAuditGenerator, Medidata.Core.Objects"
       mapTo="Medidata.Core.Objects.AuditGenerators.Configuration.CourseAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Configuration.ICourseLocaleFileAuditGenerator, Medidata.Core.Objects"
       mapTo="Medidata.Core.Objects.AuditGenerators.Configuration.CourseLocaleFileAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Configuration.IQuestionnaireAuditGenerator, Medidata.Core.Objects"
   mapTo="Medidata.Core.Objects.AuditGenerators.Configuration.QuestionnaireAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Configuration.ICourseStudyRoleAuditGenerator, Medidata.Core.Objects"
   mapTo="Medidata.Core.Objects.AuditGenerators.Configuration.CourseStudyRoleAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.Repositories.ICourseRepository, Medidata.Core.Objects"
      mapTo="Medidata.Core.Objects.Repositories.CourseRepository, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Configuration.IQuestionAuditGenerator, Medidata.Core.Objects"
   mapTo="Medidata.Core.Objects.AuditGenerators.Configuration.QuestionAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.Repositories.IQuestionRepository, Medidata.Core.Objects"
  mapTo="Medidata.Core.Objects.Repositories.QuestionRepository, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Interfaces.Repositories.IRoleActionRepository, Medidata.Core.Objects"
      mapTo="Medidata.Core.Objects.Repositories.RoleActionRepository, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>
    
    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Configuration.ISecurityGroupAuditGenerator, Medidata.Core.Objects"
  mapTo="Medidata.Core.Objects.AuditGenerators.Configuration.SecurityGroupAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>
    
    <!--Additional Interfaces-->
    <register type="Medidata.Interfaces.Caching.ICacheEngine, Medidata.Interfaces"
            mapTo="Medidata.Caching.ExpiringHashCacheEngine, Medidata.Caching">
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.Email.ISimpleEmail, Medidata.Interfaces"
            mapTo="Medidata.EmailService.EmailExport, Medidata.EmailService">
      <lifetime type="transient" />
    </register>

    <register type="Medidata.Interfaces.Email.ILoggedEmail, Medidata.Interfaces"
                mapTo="Medidata.EmailService.LoggedEmailExport, Medidata.EmailService">
      <lifetime type="transient" />
    </register>

    <register type="Medidata.Cloud.StateBroker.IStateService, Medidata.Cloud.StateBroker"
                 mapTo="Medidata.Cloud.StateBroker.StateService, Medidata.Cloud.StateBroker">
      <lifetime type="singleton" />
      <constructor />
    </register>

    <register type="Medidata.Interfaces.Medidata.Core.Objects.RollupSuppression.IRollupSuppressionManagerFactory, Medidata.Interfaces"
      mapTo="Medidata.Core.Objects.RollupSuppression.RollupSuppressionManagerFactory, Medidata.Core.Objects">
      <lifetime type="singleton" />
    </register>
    <register type="Medidata.Interfaces.Medidata.Core.Objects.RollupSuppression.IRollupSuppressibleObjectTypesService, Medidata.Interfaces"
      mapTo="Medidata.Core.Objects.RollupSuppression.RollupSuppressibleObjectTypesService, Medidata.Core.Objects">
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.DataAccess.IConnectionPersisterFactory, Medidata.Interfaces"
                mapTo="Medidata.Core.Objects.ConnectionPersisterFactory, Medidata.Core.Objects">
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.DataAccess.ITransactionManager, Medidata.Interfaces"
               mapTo="Medidata.Data.TransactionManager, Medidata.Data">
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.DataAccess.ITransactionManagerFactory, Medidata.Interfaces"
               mapTo="Medidata.Data.TransactionManagerFactory, Medidata.Data">
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.AsyncProcessing.ITaskService, Medidata.Interfaces"
                mapTo="Medidata.Core.Common.Tasks.TaskService, Medidata.Core.Common">
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.CRFMigrator.IExcelDifferenceService, Medidata.Interfaces"
                mapTo="Medidata.Core.Objects.CRFMigrator.ExcelDifferenceService, Medidata.Core.Objects">
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.Configuration.IConfiguration, Medidata.Interfaces"
               mapTo="Medidata.Core.Adapters.ConfigurationAdapter, Medidata.Core.Adapters" />

    <register type="Medidata.Interfaces.CRFMigrator.IMigrationPlanChangeLogFactory, Medidata.Interfaces"
                  mapTo="Medidata.Core.Objects.CRFMigrator.MigrationPlanChangeLogFactory, Medidata.Core.Objects">
      <lifetime type="singleton" />
    </register>

    <!-- Rollup -->
    <register type="Medidata.Interfaces.Configuration.IConfigurationManager, Medidata.Interfaces"
        mapTo="Medidata.Core.Adapters.ConfigurationManagerAdapter, Medidata.Core.Adapters" />

    <register type="Medidata.Interfaces.AsyncProcessing.IAsyncWaitService, Medidata.Interfaces"
              mapTo="Medidata.Core.Common.Tasks.AsyncWaitAdapter, Medidata.Core.Common">
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.AsyncProcessing.IThreadedWorker, Medidata.Interfaces"
              mapTo="Medidata.Core.Objects.ThreadedWorker, Medidata.Core.Objects">
    </register>


    <register type="Medidata.Interfaces.AsyncProcessing.ICancellationTokenSourceFactory, Medidata.Interfaces"
              mapTo="Medidata.Core.Common.Tasks.CancellationTokenSourceFactory, Medidata.Core.Common">
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.Adapters.IInstanceService, Medidata.Interfaces"
                  mapTo="Medidata.Core.Objects.Services.InstanceService, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.StatusRollup.IDataPointStatusCalculatorManagerFactory, Medidata.Core.Objects"
              mapTo="Medidata.Core.Objects.StatusRollup.DataPointStatusCalculatorManagerFactory, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.StatusRollup.IStatusCalculatorFactory, Medidata.Core.Objects"
              mapTo="Medidata.Core.Objects.StatusRollup.StatusCalculatorFactory, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.StatusRollup.IObjectStatusRepository, Medidata.Core.Objects"
            mapTo="Medidata.Core.Objects.StatusRollup.ObjectStatusRepository, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.StatusRollup.IObjectStatusService, Medidata.Core.Objects"
            mapTo="Medidata.Core.Objects.StatusRollup.ObjectStatusService, Medidata.Core.Objects">
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Data.Factories.IObjectDataAdapterFactory, Medidata.Data"
           mapTo="Medidata.Data.Factories.ObjectDataAdapterFactory, Medidata.Data" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.StatusRollup.Deferred.IDeferredProcessorFactory, Medidata.Core.Objects"
            mapTo="Medidata.Core.Objects.StatusRollup.Deferred.DeferredProcessorFactory, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.StatusRollup.Deferred.IDeferredRollupQueueManager, Medidata.Core.Objects"
            mapTo="Medidata.Core.Objects.StatusRollup.Deferred.DeferredRollupQueueManager, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.StatusRollup.Deferred.IDeferredRollupRepository, Medidata.Core.Objects"
           mapTo="Medidata.Core.Objects.StatusRollup.Deferred.DeferredRollupRepository, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.StatusRollup.Deferred.IDeferredDTOBuilder, Medidata.Core.Objects"
               mapTo="Medidata.Core.Objects.StatusRollup.Deferred.DeferredDTOBuilder, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.StatusRollup.Deferred.IDeferredRollupService, Medidata.Core.Objects"
           mapTo="Medidata.Core.Objects.StatusRollup.Deferred.DeferredRollupService, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.StatusRollup.Deferred.IOverdueStatusProcessor, Medidata.Core.Objects"
       mapTo="Medidata.Core.Objects.StatusRollup.Deferred.OverdueStatusProcessor, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.StatusRollup.Deferred.IDeferredRollupExecutor, Medidata.Core.Objects"
      mapTo="Medidata.Core.Objects.StatusRollup.Deferred.DeferredRollupExecutor, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Repositories.Fetchers.ISubjectFetcher, Medidata.Core.Objects"
      mapTo="Medidata.Core.Objects.Repositories.Fetchers.SubjectFetcher, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Repositories.Fetchers.IInstanceFetcher, Medidata.Core.Objects"
      mapTo="Medidata.Core.Objects.Repositories.Fetchers.InstanceFetcher, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Repositories.Fetchers.IDataPageFetcher, Medidata.Core.Objects"
      mapTo="Medidata.Core.Objects.Repositories.Fetchers.DataPageFetcher, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.TSDV.TSDVRunRetrospective.Interfaces.ITSDVRunRetrospectiveRepository, Medidata.Core.Objects"
            mapTo=" Medidata.Core.Objects.TSDVRunRetrospective.Repositories.TSDVRunRetrospectiveRepository, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>

    <register type="Medidata.Core.Objects.TSDV.TSDVRunRetrospective.Interfaces.ITSDVRunRetrospectiveService, Medidata.Core.Objects"
            mapTo=" Medidata.Core.Objects.TSDVRunRetrospective.TSDVRunRetrospectiveService, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>

    <register type="Medidata.Core.Objects.TSDV.TSDVRunRetrospective.Interfaces.ITSDVRunRetrospectiveProcessor, Medidata.Core.Objects"
            mapTo=" Medidata.Core.Objects.TSDV.TSDVRunRetrospective.TSDVRunRetrospectiveProcessor, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Factories.ISubjectFactory, Medidata.Core.Objects"
      mapTo="Medidata.Core.Objects.Factories.SubjectFactory, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Factories.IRecordFactory, Medidata.Core.Objects"
        mapTo="Medidata.Core.Objects.Factories.RecordFactory, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Factories.IStudyFactory, Medidata.Core.Objects"
      mapTo="Medidata.Core.Objects.Factories.StudyFactory, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Factories.IDataPointFactory, Medidata.Core.Objects"
        mapTo="Medidata.Core.Objects.Factories.DataPointFactory, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Factories.IInstanceFactory, Medidata.Core.Objects"
      mapTo="Medidata.Core.Objects.Factories.InstanceFactory, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Factories.IDataPageFactory, Medidata.Core.Objects"
      mapTo="Medidata.Core.Objects.Factories.DataPageFactory, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Factories.ISubjectCollectionFactory, Medidata.Core.Objects"
      mapTo="Medidata.Core.Objects.Factories.SubjectCollectionFactory, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Factories.IStudySiteCollectionFactory, Medidata.Core.Objects"
        mapTo="Medidata.Core.Objects.Factories.StudySiteCollectionFactory, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Factories.IStudyCollectionFactory, Medidata.Core.Objects"
        mapTo="Medidata.Core.Objects.Factories.StudyCollectionFactory, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Factories.IInstanceCollectionFactory, Medidata.Core.Objects"
      mapTo="Medidata.Core.Objects.Factories.InstanceCollectionFactory, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Factories.IDataPageCollectionFactory, Medidata.Core.Objects"
      mapTo="Medidata.Core.Objects.Factories.DataPageCollectionFactory, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.Adapters.IStudySiteService, Medidata.Interfaces"
                  mapTo="Medidata.Core.Objects.Services.StudySiteService, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Utilities.IEnvironment, Medidata.Interfaces"
                mapTo="Medidata.Core.Common.Utilities.EnvironmentService, Medidata.Core.Common" >
      <lifetime type ="singleton" />
    </register>

    <register type ="Medidata.Data.Materializer.IMaterializerFactory[], Medidata.Data"
      mapTo="Medidata.Data.Materializer.MaterializerFactory[], Medidata.Data">
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.StatusRollup.IObjectStatusCalculationProcessor, Medidata.Core.Objects"
            mapTo="Medidata.Core.Objects.StatusRollup.ObjectStatusCalculationProcessor, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <!--Core Object Repository-->
    <register type="Medidata.Core.Objects.Interfaces.Repositories.IDataPageRepository, Medidata.Core.Objects"
          mapTo="Medidata.Core.Objects.Repositories.DataPageRepository, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Interfaces.Repositories.IRecordRepository, Medidata.Core.Objects"
          mapTo="Medidata.Core.Objects.Repositories.RecordRepository, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Interfaces.Repositories.IDataPointRepository, Medidata.Core.Objects"
      mapTo="Medidata.Core.Objects.Repositories.DataPointRepository, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Interfaces.Repositories.IInstanceRepository, Medidata.Core.Objects"
                 mapTo="Medidata.Core.Objects.Repositories.InstanceRepository, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.Repositories.IStudySiteRepository, Medidata.Core.Objects"
        mapTo="Medidata.Core.Objects.Repositories.StudySiteRepository, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Interfaces.Repositories.IStudyRepository, Medidata.Core.Objects"
      mapTo="Medidata.Core.Objects.Repositories.StudyRepository, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Interfaces.Repositories.IUserRepository, Medidata.Core.Objects"
      mapTo="Medidata.Core.Objects.Repositories.UserRepository, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Interfaces.Repositories.ISubjectRepository, Medidata.Core.Objects"
      mapTo="Medidata.Core.Objects.Repositories.SubjectRepository, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.StatusRollup.Deferred.IDeferredRollupStatusSaveBufferFactory, Medidata.Core.Objects"
       mapTo="Medidata.Core.Objects.StatusRollup.Deferred.DeferredRollupStatusSaveBufferFactory, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Interfaces.Repositories.IProtocolDeviationRepository, Medidata.Core.Objects"
      mapTo="Medidata.Core.Objects.Repositories.ProtocolDeviationRepository, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Interfaces.Repositories.IQueryRepository, Medidata.Core.Objects"
      mapTo="Medidata.Core.Objects.Repositories.QueryRepository, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Interfaces.Repositories.IDatabaseVerificationRepository, Medidata.Core.Objects"
      mapTo="Medidata.Core.Objects.Repositories.DatabaseVerificationRepository, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Interfaces.Repositories.IArchitectAuditRepository, Medidata.Core.Objects"
            mapTo="Medidata.Core.Objects.Repositories.ArchitectAuditRepository, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.Repositories.IEmailEventDetailRepository, Medidata.Core.Objects"
                mapTo="Medidata.Core.Objects.Repositories.EmailEventDetailRepository, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Interfaces.Repositories.ICRFDraftRepository, Medidata.Core.Objects"
                mapTo="Medidata.Core.Objects.Repositories.CRFDraftRepository, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Interfaces.Repositories.IInPlaceEntryRepository, Medidata.Core.Objects"
  mapTo="Medidata.Core.Objects.Repositories.InPlaceEntryRepository, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Interfaces.Repositories.IMigrationInPlaceRepository, Medidata.Core.Objects"
  mapTo="Medidata.Core.Objects.Repositories.MigrationInPlaceRepository, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Interfaces.Repositories.IConfigurationRepository, Medidata.Core.Objects"
  mapTo="Medidata.Core.Objects.Repositories.ConfigurationRepository, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Interfaces.Repositories.ICodingColumnRepository, Medidata.Core.Objects"
  mapTo="Medidata.Core.Objects.Repositories.CodingColumnRepository, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Interfaces.Repositories.IMigrationConfigurationRepository, Medidata.Core.Objects"
  mapTo="Medidata.Core.Objects.Repositories.MigrationConfigurationRepository, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Interfaces.Repositories.IFolderFormRepository, Medidata.Core.Objects"
  mapTo="Medidata.Core.Objects.Repositories.FolderFormRepository, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <!--Rollup Health Status-->
    <register type="Medidata.Core.Objects.StatusRollup.HealthStatus.IRollupHealthStatusRepository, Medidata.Core.Objects"
       mapTo="Medidata.Core.Objects.StatusRollup.HealthStatus.RollupHealthStatusRepository, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.CleaningEngine.ICheckLogger, Medidata.Interfaces"
       mapTo="Medidata.Core.Objects.CleaningEngineParts.CheckLogger, Medidata.Core.Objects">
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.SystemInformation.IEnvironment, Medidata.Interfaces"
      mapTo="Medidata.Core.Adapters.SystemEnvironmentAdapter, Medidata.Core.Adapters">
      <lifetime type="singleton" />
    </register>

    <!--Feature Block-->
    <register type="Medidata.Interfaces.BlockFeatures.IBlockFeaturesService, Medidata.Interfaces"
      mapTo="Medidata.Core.Objects.Services.BlockFeaturesService, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>
    <register type="Medidata.Core.Objects.Interfaces.Repositories.IBlockedReportRepository, Medidata.Core.Objects"
        mapTo="Medidata.Core.Objects.Repositories.BlockedReportRepository, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>
    <register type="Medidata.Interfaces.DesignerFeatures.IDesignerFeaturesService, Medidata.Interfaces"
      mapTo="Medidata.Core.Objects.Services.DesignerFeaturesService, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.TSDV.Interfaces.Repositories.ITSDVAllocationTriggerRepository, Medidata.Core.Objects"
      mapTo="Medidata.Core.Objects.TSDV.Repositories.TSDVAllocationTriggerRepository, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.TSDV.ITSDVAllocationTriggerService, Medidata.Interfaces"
      mapTo="Medidata.Core.Objects.TSDV.TSDVAllocationTriggerService, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.TSDV.ITSDVConditionEvaluator, Medidata.Interfaces"
      mapTo="Medidata.Core.Objects.TSDV.TSDVConditionEvaluator, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Rave.Domain.Events.Abstractions.IEventsStore, Medidata.Rave.Domain.Events"
     mapTo="Medidata.Core.Objects.Repositories.EventRepository, Medidata.Core.Objects">
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Rave.Domain.Events.Abstractions.IEventsService, Medidata.Rave.Domain.Events"
     mapTo="Medidata.Rave.Domain.Events.Services.EventsService, Medidata.Rave.Domain.Events">
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Rave.Domain.Events.Abstractions.IEventContextFactory, Medidata.Rave.Domain.Events"
           mapTo="Medidata.Core.Objects.Factories.EventContextFactory, Medidata.Core.Objects">
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Interfaces.Repositories.ICustomFunctionRepository, Medidata.Core.Objects"
      mapTo="Medidata.Core.Objects.Repositories.CustomFunctionRepository, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>

    <register type="Medidata.Interfaces.Caching.ICacheResetService, Medidata.Interfaces"
              mapTo="Medidata.Core.Objects.Adapters.CacheResetAdapter, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>

    <register type="Medidata.Interfaces.Clinical.ISubjectMatrixService, Medidata.Interfaces"
       mapTo="Medidata.Core.Objects.Services.SubjectMatrixService, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Interfaces.Repositories.ISubjectMatrixRepository, Medidata.Core.Objects"
      mapTo="Medidata.Core.Objects.Repositories.SubjectMatrixRepository, Medidata.Core.Objects " >
      <lifetime type ="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Interfaces.Repositories.ILabQueueRepository, Medidata.Core.Objects"
        mapTo="Medidata.Core.Objects.Repositories.LabQueueRepository, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.Adapters.ICasClientAdapter, Medidata.Interfaces"
              mapTo="Medidata.Core.Adapters.CasClientAdapter, Medidata.Core.Adapters">
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Interfaces.Repositories.ILabRepository, Medidata.Core.Objects"
      mapTo="Medidata.Core.Objects.Repositories.LabRepository, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Cloud.Programmability.CustomFunctions.Abstractions.IDotNetWhitelisterFactory, Medidata.Rave.Programmability.CustomFunctions"
            mapTo="Medidata.Cloud.Programmability.CustomFunctions.Whitelist.DotNetWhitelisterFactory, Medidata.Rave.Programmability.CustomFunctions">
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Cloud.Programmability.CustomFunctions.Abstractions.IEndpointDictionaryCoordinator, Medidata.Rave.Programmability.CustomFunctions"
            mapTo="Medidata.Cloud.Programmability.CustomFunctions.Whitelist.EndpointDictionaryCoordinator, Medidata.Rave.Programmability.CustomFunctions">
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Cloud.Programmability.CustomFunctions.Abstractions.IAnalyzerFactory, Medidata.Rave.Programmability.CustomFunctions"
            mapTo="Medidata.Cloud.Programmability.CustomFunctions.Analyzers.AnalyzerFactory, Medidata.Rave.Programmability.CustomFunctions">
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Cloud.Programmability.CustomFunctions.Compilation.ICustomFunctionEngineFactory, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Cloud.Programmability.CustomFunctions.Compilation.CustomFunctionEngineFactory, Medidata.Rave.Programmability.CustomFunctions" >
      <lifetime type ="singleton" />
    </register>

    <register type="Medidata.Cloud.Programmability.CustomFunctions.Compilation.ICustomFunctionIncompatibleApiReplacer, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Cloud.Programmability.CustomFunctions.Compilation.CustomFunctionIncompatibleApiReplacer, Medidata.Rave.Programmability.CustomFunctions" >
      <lifetime type ="singleton" />
    </register>

    <register type="Medidata.Cloud.Programmability.CustomFunctions.Compilation.ICustomFunctionEngine, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Cloud.Programmability.CustomFunctions.Compilation.CustomFunctionEngine, Medidata.Rave.Programmability.CustomFunctions" >
      <lifetime type ="singleton" />
    </register>

    <register type="Medidata.Cloud.Programmability.CustomFunctions.Compilation.ICustomFunctionParser, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Cloud.Programmability.CustomFunctions.Compilation.CustomFunctionParser, Medidata.Rave.Programmability.CustomFunctions" >
      <lifetime type ="singleton" />
    </register>

    <register type="Medidata.Cloud.Programmability.CustomFunctions.Abstractions.PrecompiledFunctions.IPrecompiledFunctionService, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Cloud.Programmability.CustomFunctions.PrecompiledFunctionService, Medidata.Rave.Programmability.CustomFunctions" >
      <lifetime type ="singleton" />
    </register>

    <register type="Medidata.Rave.Programmability.Swaps.ISwapperFactory, Medidata.Rave.Programmability.Swaps"
              mapTo="Medidata.Core.Objects.Programmability.SwapperFactory, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>

    <register type="Medidata.Cloud.Programmability.CustomFunctions.Adapters.IAssemblyLoaderAdapter, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Core.Objects.Programmability.AssemblyLoaderAdapter, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>

    <register type="Medidata.Cloud.Programmability.CustomFunctions.Adapters.ICustomFunctionLogAdapter, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Core.Objects.Programmability.CustomFunctionLogAdapter, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>

    <register type="Medidata.Cloud.Programmability.CustomFunctions.Adapters.ICustomFunctionConfigurationAdapter, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Core.Objects.Programmability.CustomFunctionConfigurationAdapter, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>

    <register type="Medidata.Cloud.Programmability.CustomFunctions.Compilation.ICustomFunctionHashProvider, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Cloud.Programmability.CustomFunctions.Compilation.CustomFunctionHashProvider, Medidata.Rave.Programmability.CustomFunctions" >
      <lifetime type ="singleton" />
    </register>

    <register type="Medidata.Cloud.Programmability.CustomFunctions.Adapters.ICustomFunctionStoreAdapter, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Core.Objects.Programmability.CustomFunctionStoreAdapter, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>

    <register type="Medidata.Cloud.Programmability.CustomFunctions.Adapters.ICompiledCustomFunctionCacheAdapter, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Core.Objects.CustomFunctionsNamespace.CompiledCustomFunctionCache, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>

    <register type="Medidata.Cloud.Programmability.CustomFunctions.Adapters.ICustomFunctionAnalysisCacheAdapter, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Core.Objects.CustomFunctionsNamespace.CustomFunctionAnalysisCache, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>

    <register type="Medidata.Cloud.Programmability.CustomFunctions.Adapters.ICustomizationAgentAdapter, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Core.Objects.Programmability.CustomizationAgentAdapter, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>

    <register type="Medidata.Cloud.Programmability.CustomFunctions.Adapters.ILocalizationAdapter, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Core.Objects.Programmability.LocalizationAdapter, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>

    <register type="Medidata.Cloud.Programmability.CustomFunctions.Adapters.IProtocolDeviationAdapter, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Core.Objects.Programmability.ProtocolDeviationAdapter, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>

    <register type="Medidata.Interfaces.Programmability.ICompiledCustomFunctionCache, Medidata.Interfaces"
              mapTo="Medidata.Core.Objects.CustomFunctionsNamespace.CompiledCustomFunctionCache, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>

    <register type="Medidata.Interfaces.Programmability.ICustomFunctionCache, Medidata.Interfaces"
              mapTo="Medidata.Core.Objects.CustomFunctionsNamespace.CustomFunctionCache, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>

    <register type="Medidata.Interfaces.Programmability.ICustomFunctionAnalysisCache, Medidata.Interfaces"
              mapTo="Medidata.Core.Objects.CustomFunctionsNamespace.CustomFunctionAnalysisCache, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>

    <register type="Medidata.Cloud.Programmability.CustomFunctions.Abstractions.ICustomFunctionCompiler, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Cloud.Programmability.CustomFunctions.Roslyn.RoslynCustomFunctionCompiler, Medidata.Rave.Programmability.CustomFunctions" >
      <lifetime type ="singleton" />
    </register>

    <register type="Medidata.Cloud.Programmability.CustomFunctions.Roslyn.IRoslynHelper, Medidata.Rave.Programmability.CustomFunctions"
            mapTo="Medidata.Cloud.Programmability.CustomFunctions.Roslyn.RoslynHelper, Medidata.Rave.Programmability.CustomFunctions">
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.Adapters.ICustomFunctionService, Medidata.Interfaces"
                mapTo="Medidata.Core.Objects.Adapters.CustomFunctionAdapter, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.Programmability.ICustomFunctionExecutorFactory, Medidata.Interfaces"
      mapTo="Medidata.Core.Objects.Programmability.CustomFunctionExecutorFactory, Medidata.Core.Objects">
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Cloud.Programmability.CustomFunctions.Abstractions.PrecompiledFunctions.IAlwaysTrueFunctionService, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Core.Objects.Programmability.PrecompiledFunctions.AlwaysTrueFunctionService, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>
    <register type="Medidata.Cloud.Programmability.CustomFunctions.Abstractions.PrecompiledFunctions.IBalanceRandomizeFunctionService, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Core.Objects.Programmability.PrecompiledFunctions.BalanceRandomizeFunctionService, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>
    <register type="Medidata.Cloud.Programmability.CustomFunctions.Abstractions.PrecompiledFunctions.ICfsTechGlSetExceptionInfoFunctionService, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Core.Objects.Programmability.PrecompiledFunctions.CfsTechGlSetExceptionInfoFunctionService, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>
    <register type="Medidata.Cloud.Programmability.CustomFunctions.Abstractions.PrecompiledFunctions.ICfWfAddSfRand1FunctionService, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Core.Objects.Programmability.PrecompiledFunctions.CfWfAddSfRand1FunctionService, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>
    <register type="Medidata.Cloud.Programmability.CustomFunctions.Abstractions.PrecompiledFunctions.ICfWfAddSfRand2FunctionService, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Core.Objects.Programmability.PrecompiledFunctions.CfWfAddSfRand2FunctionService, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>
    <register type="Medidata.Cloud.Programmability.CustomFunctions.Abstractions.PrecompiledFunctions.ICfWfAddSfRand3FunctionService, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Core.Objects.Programmability.PrecompiledFunctions.CfWfAddSfRand3FunctionService, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>
    <register type="Medidata.Cloud.Programmability.CustomFunctions.Abstractions.PrecompiledFunctions.ICfWfAddSfRand4FunctionService, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Core.Objects.Programmability.PrecompiledFunctions.CfWfAddSfRand4FunctionService, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>
    <register type="Medidata.Cloud.Programmability.CustomFunctions.Abstractions.PrecompiledFunctions.ICIsUniqueDataFunctionService, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Core.Objects.Programmability.PrecompiledFunctions.CIsUniqueDataFunctionService, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>
    <register type="Medidata.Cloud.Programmability.CustomFunctions.Abstractions.PrecompiledFunctions.IExceptionNotificationFunctionService, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Core.Objects.Programmability.PrecompiledFunctions.ExceptionNotificationFunctionService, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>
    <register type="Medidata.Cloud.Programmability.CustomFunctions.Abstractions.PrecompiledFunctions.IGenerateCaseIdService, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Core.Objects.Programmability.PrecompiledFunctions.GenerateCaseIdService, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>
    <register type="Medidata.Cloud.Programmability.CustomFunctions.Abstractions.PrecompiledFunctions.IGetCurrentUserFunctionService, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Core.Objects.Programmability.PrecompiledFunctions.GetCurrentUserFunctionService, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>
    <register type="Medidata.Cloud.Programmability.CustomFunctions.Abstractions.PrecompiledFunctions.IRequestWebServiceFunctionService, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Core.Objects.Programmability.PrecompiledFunctions.RequestWebServiceFunctionService, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>
    <register type="Medidata.Cloud.Programmability.CustomFunctions.Abstractions.PrecompiledFunctions.IRsaKeyToXmlFunctionService, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Core.Objects.Programmability.PrecompiledFunctions.RsaKeyToXmlFunctionService, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>
    <register type="Medidata.Cloud.Programmability.CustomFunctions.Abstractions.PrecompiledFunctions.IRsgCaseIdAndFolder1FunctionService, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Core.Objects.Programmability.PrecompiledFunctions.RsgCaseIdAndFolder1FunctionService, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>
    <register type="Medidata.Cloud.Programmability.CustomFunctions.Abstractions.PrecompiledFunctions.IRsgCaseIdAndFolder2FunctionService, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Core.Objects.Programmability.PrecompiledFunctions.RsgCaseIdAndFolder2FunctionService, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>
    <register type="Medidata.Cloud.Programmability.CustomFunctions.Abstractions.PrecompiledFunctions.IStandardDataValueFunctionService, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Core.Objects.Programmability.PrecompiledFunctions.StandardDataValueFunctionService, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>
    <register type="Medidata.Cloud.Programmability.CustomFunctions.Abstractions.PrecompiledFunctions.ISysDsGetDsMappingsFunctionService, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Core.Objects.Programmability.PrecompiledFunctions.SysDsGetDsMappingsFunctionService, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>
    <register type="Medidata.Cloud.Programmability.CustomFunctions.Abstractions.PrecompiledFunctions.ISysDsGetDsProjectFunctionService, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Core.Objects.Programmability.PrecompiledFunctions.SysDsGetDsProjectFunctionService, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>
    <register type="Medidata.Cloud.Programmability.CustomFunctions.Abstractions.PrecompiledFunctions.ISysDsQueueAeRecordFunctionService, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Core.Objects.Programmability.PrecompiledFunctions.SysDsQueueAeRecordFunctionService, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>
    <register type="Medidata.Cloud.Programmability.CustomFunctions.Abstractions.PrecompiledFunctions.ISysDsQueueFunctionService, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Core.Objects.Programmability.PrecompiledFunctions.SysDsQueueFunctionService, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>
    <register type="Medidata.Cloud.Programmability.CustomFunctions.Abstractions.PrecompiledFunctions.ITmsSyncFunctionService, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Core.Objects.Programmability.PrecompiledFunctions.TmsSyncFunctionService, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>
    <register type="Medidata.Cloud.Programmability.CustomFunctions.Abstractions.PrecompiledFunctions.IWaitForReadyAndPerformActionService, Medidata.Rave.Programmability.CustomFunctions"
              mapTo="Medidata.Core.Objects.Programmability.PrecompiledFunctions.WaitForReadyAndPerformActionService, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>
    <register type="Medidata.Core.Objects.Programmability.PrecompiledFunctions.IClientProcedureStore, Medidata.Core.Objects"
              mapTo="Medidata.Core.Objects.Programmability.PrecompiledFunctions.ClientProcedureStore, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>
    <register type="Medidata.Core.Objects.Factories.ILabStandardGroupFactory, Medidata.Core.Objects"
              mapTo="Medidata.Core.Objects.Factories.LabStandardGroupFactory, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>
    <register type="Medidata.Interfaces.Balance.IRandomizerCoordinator, Medidata.Interfaces"
              mapTo="Medidata.Core.Objects.Balance.RandomizerCoordinator, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>
    <register type="Medidata.Interfaces.Balance.IRSAKeyToXMLConverter, Medidata.Interfaces"
              mapTo="Medidata.Core.Objects.Balance.RSAKeyToXMLConverterAdapter, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>
    <register type="Medidata.Interfaces.Clinical.IMessagingCoordinator, Medidata.Interfaces"
              mapTo="Medidata.Core.Objects.Services.MessagingCoordinator, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>
    <register type="Medidata.Interfaces.Programmability.ICustomFunctionCoordinator, Medidata.Interfaces"
              mapTo="Medidata.Core.Objects.Programmability.CustomFunctionCoordinator, Medidata.Core.Objects" >
      <lifetime type ="singleton" />
    </register>
    <register type="Medidata.Interfaces.Utilities.IConnectionStringService, Medidata.Interfaces"
              mapTo="Medidata.Core.Adapters.ConnectionAdapter, Medidata.Core.Adapters" >
      <lifetime type ="singleton" />
    </register>

    <register type="Medidata.Interfaces.Balance.IWebServiceRequestHelper, Medidata.Interfaces"
              mapTo="Medidata.Core.Objects.Balance.WebService.WebServiceRequestHelper, Medidata.Core.Objects" />

    <register type="Medidata.Interfaces.Crypto.ICrypto, Medidata.Interfaces"
              mapTo="Medidata.Core.Adapters.CryptoAdapter, Medidata.Core.Adapters" >
      <lifetime type="singleton" />
    </register>
    
    <register type="Medidata.Interfaces.Medidata.Core.Objects.IBrokenWorkFlowCheckService, Medidata.Interfaces"
        mapTo="Medidata.Core.Objects.BrokenWorkFlowCheckService, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <!--Interaction Tracing-->
    <register type="Medidata.Interfaces.InteractionTracing.IInteractionTrace, Medidata.Interfaces"
              mapTo="Medidata.Core.Objects.InteractionTrace, Medidata.Core.Objects">
    </register>
    <register type="Medidata.Interfaces.InteractionTracing.IInteractionTracer, Medidata.Interfaces"
              mapTo="Medidata.Core.Objects.InteractionTracer, Medidata.Core.Objects">
    </register>
    <register type="Medidata.Interfaces.InteractionTracing.IInteractionTraceRepository, Medidata.Interfaces"
              mapTo="Medidata.Core.Objects.InteractionTraceRepository, Medidata.Core.Objects">
      <lifetime type="singleton" />
    </register>
    <register type="Medidata.Interfaces.InteractionTracing.IInteractionTraceExporter, Medidata.Interfaces"
              mapTo="Medidata.Core.Objects.InteractionTraceExporter, Medidata.Core.Objects">
      <lifetime type="singleton" />
    </register>
    <register type="Medidata.Interfaces.InteractionTracing.IMigrationThreadAborter, Medidata.Interfaces"
              mapTo="Medidata.Core.Objects.MigrationThreadAborter, Medidata.Core.Objects">
      <lifetime type="singleton" />
    </register>
    <register type="Medidata.Core.Objects.Interfaces.IMigrationInteractionRepository, Medidata.Core.Objects"
              mapTo="Medidata.Core.Objects.Repositories.MigrationInteractionRepository, Medidata.Core.Objects">
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.IInteractionObjectService, Medidata.Interfaces"
              mapTo="Medidata.Core.Objects.InteractionObjectService, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>
    
    <register type="Medidata.Core.Objects.TSDV.Interfaces.Repositories.ITSDVObjectRepository, Medidata.Core.Objects"
              mapTo="Medidata.Core.Objects.TSDV.Repositories.TSDVObjectRepository, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Interfaces.Services.IBulkStatusUpdateQueueService, Medidata.Core.Objects"
          mapTo="Medidata.Core.Objects.Services.BulkStatusUpdateQueueService, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.Repositories.IBulkStatusUpdateQueueRepository, Medidata.Core.Objects"
              mapTo="Medidata.Core.Objects.Repositories.BulkStatusUpdateQueueRepository, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>
	<register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Configuration.IPDFConfigurationAuditGenerator, Medidata.Core.Objects"
       mapTo="Medidata.Core.Objects.AuditGenerators.Configuration.PDFConfigurationAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Configuration.IPDFConfigurationProfileAuditGenerator, Medidata.Core.Objects"
      mapTo="Medidata.Core.Objects.AuditGenerators.Configuration.PDFConfigurationProfileAuditGenerator, Medidata.Core.Objects" >
	</register>
  
      <register type="Medidata.Core.Objects.Interfaces.Repositories.IPDFConfigurationRepository, Medidata.Core.Objects"
    mapTo="Medidata.Core.Objects.Repositories.PDFConfigurationRepository, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Interfaces.Repositories.IPDFConfigurationProfileRepository, Medidata.Core.Objects"
	mapTo="Medidata.Core.Objects.Repositories.PDFConfigurationProfileRepository, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <!-- ELearning -->
    <register type="Medidata.Core.Objects.Interfaces.Repositories.IELearningUserCourseRepository, Medidata.Core.Objects"
      mapTo="Medidata.Core.Objects.Repositories.ELearningUserCourseRepository, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Interfaces.Repositories.IMessagingRepository, Medidata.Core.Objects"
      mapTo="Medidata.Core.Objects.Repositories.MessagingRepository, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.Email.IMessagingService, Medidata.Interfaces"
         mapTo="Medidata.Core.Objects.Services.MessagingService, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>
    
    <!-- Dependency Fetcher -->
    <register type="Medidata.Utilities.Interfaces.IDependencyFetcher[], Medidata.Utilities"
      mapTo="Medidata.Utilities.CachedDependencyFetcher[], Medidata.Utilities" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Programmability.IDiagnosticFormatter, Medidata.Core.Objects"
      mapTo="Medidata.Core.Objects.Programmability.DiagnosticFormatter, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Programmability.ApiMapping.ICustomerApiAdapter, Medidata.Core.Objects"
      mapTo="Medidata.Core.Objects.Programmability.ApiMapping.CustomerApiAdapter, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <!-- RaveApi -->
    <register type="Medidata.Interfaces.IArchitectApi, Medidata.Interfaces"
      mapTo="Medidata.Core.Objects.ArchitectApi, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.IEdcApi, Medidata.Interfaces"
      mapTo="Medidata.Core.Objects.EdcApi, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.ILabApi, Medidata.Interfaces"
      mapTo="Medidata.Core.Objects.LabApi, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.IConfigurationApi, Medidata.Interfaces"
      mapTo="Medidata.Core.Objects.ConfigurationApi, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.IRaveApi, Medidata.Interfaces"
      mapTo="Medidata.Core.Objects.Programmability.RaveApi, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>


    <register type="Medidata.Interfaces.EProOptions.IEProOptionsCoreService, Medidata.Interfaces"
      mapTo="Medidata.Core.Objects.Services.EProOptions.EProOptionsCoreService, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.EProOptions.IEProOptionsServiceModel, Medidata.Interfaces"
      mapTo="Medidata.Core.Objects.Services.EProOptions.EProOptionsServiceModel, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.EProOptions.IExternalizedEProOptionsApi, Medidata.Interfaces"
      mapTo="Medidata.ExternalSystems.APIIntegrations.ExternalizedEProOptions.ExternalizedEProOptionsApi, Medidata.ExternalSystems.APIIntegrations" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.EProOptions.IExternalizedEProOptionsService, Medidata.Interfaces"
      mapTo="Medidata.ExternalSystems.APIIntegrations.ExternalizedEProOptions.ExternalizedEProOptionsService, Medidata.ExternalSystems.APIIntegrations" >
      <lifetime type="singleton"/>
    </register>
    
    <register type="Medidata.RaveWebServices.Model.IContentSender, Medidata.RaveWebServices.Model"
      mapTo="Medidata.RaveWebServices.Model.MAuthContentSender, Medidata.RaveWebServices.Model" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.ExtendedDryRunMigration.IExternalizedExtendedDryRunMigrationApi, Medidata.Interfaces"
      mapTo="Medidata.ExternalSystems.APIIntegrations.ExternalizedExtendedDryRunMigration.ExternalizedExtendedDryRunMigrationApi, Medidata.ExternalSystems.APIIntegrations" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.ExtendedDryRunMigration.IExternalizedExtendedDryRunMigrationService, Medidata.Interfaces"
      mapTo="Medidata.ExternalSystems.APIIntegrations.ExternalizedExtendedDryRunMigration.ExternalizedExtendedDryRunMigrationService, Medidata.ExternalSystems.APIIntegrations" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Interfaces.ExternalizedComponents.IComponentModelService, Medidata.Interfaces"
      mapTo="Medidata.Core.Objects.Services.ComponentModelService, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>
       
    <register type="Medidata.Interfaces.ExternalizedComponents.IExternalizedComponentsApi, Medidata.Interfaces"
      mapTo="Medidata.ExternalSystems.APIIntegrations.ExternalizedComponents.ExternalizedComponentsApi, Medidata.ExternalSystems.APIIntegrations" >
      <lifetime type="singleton"/>
    </register>
    
    <register type="Medidata.Interfaces.ExternalizedComponents.IExternalizedComponentsService, Medidata.Interfaces"
      mapTo="Medidata.ExternalSystems.APIIntegrations.ExternalizedComponents.ExternalizedComponentsService, Medidata.ExternalSystems.APIIntegrations" >
      <lifetime type="singleton"/>
    </register>

    <register type="Medidata.Core.Objects.Interfaces.Services.IFieldComponentService, Medidata.Core.Objects"
      mapTo="Medidata.ExternalSystems.APIIntegrations.ExternalizedComponents.FieldComponentService, Medidata.ExternalSystems.APIIntegrations" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.ExternalizedComponents.IFieldComponentDetailsService, Medidata.Interfaces"
      mapTo="Medidata.ExternalSystems.APIIntegrations.ExternalizedComponents.FieldComponentDetailsService, Medidata.ExternalSystems.APIIntegrations" >
      <lifetime type="singleton" />
    </register>
    
    <register type="Medidata.Core.Objects.Interfaces.Repositories.IFieldRepository, Medidata.Core.Objects"
      mapTo="Medidata.Core.Objects.Repositories.FieldRepository, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Core.Objects.Interfaces.AuditGenerators.Architect.IArchitectUploadFieldComponentAuditGenerator, Medidata.Core.Objects"
      mapTo="Medidata.Core.Objects.AuditGenerators.Architect.ArchitectUploadFieldComponentAuditGenerator, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.RaveWebServices.Outbound.IConnector, Medidata.RaveWebServices.Outbound"
      mapTo="Medidata.RaveWebServices.Outbound.Connector, Medidata.RaveWebServices.Outbound" >
      <lifetime type="singleton" />
    </register>
      
    <register type="Medidata.RaveWebServices.Model.IContentSender, Medidata.RaveWebServices.Model"
      mapTo="Medidata.RaveWebServices.Model.MAuthContentSender, Medidata.RaveWebServices.Model" >
      <lifetime type="singleton" />
    </register>
    

    <register type="Medidata.Core.Objects.Programmability.ICustomFunctionContextService, Medidata.Core.Objects"
      mapTo="Medidata.Core.Objects.Programmability.CustomFunctionContextService, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.ITsdvApi, Medidata.Interfaces"
       mapTo="Medidata.Core.Objects.TsdvApi, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.IDataFormatApi, Medidata.Interfaces"
       mapTo="Medidata.Core.Objects.DataFormatApi, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.IMessagingApi, Medidata.Interfaces"
      mapTo="Medidata.Core.Objects.MessagingApi, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.IDataApi, Medidata.Interfaces"
       mapTo="Medidata.Core.Objects.DataApi, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.IMarkingApi, Medidata.Interfaces"
           mapTo="Medidata.Core.Objects.MarkingApi, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>

    <register type="Medidata.Interfaces.Clinical.ILabLookupProcessor, Medidata.Interfaces"
            mapTo="Medidata.Core.Objects.Labs.LabLookupProcessor, Medidata.Core.Objects" >
      <lifetime type="singleton" />
    </register>
    
  </container>
</unity>
